name: Template - Docker

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true
    inputs:
      AWS_REGION:
        required: true
        type: string
jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      
    steps:
      - uses: actions/checkout@v3

      - name: Descargar artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: app/

      - name: Leer nombre desde package.json
        id: metadata
        run: |
          NAME=$(jq -r .name app/package.json | sed 's/@//;s#/#-#g')
          echo "name=$NAME" >> $GITHUB_ENV

      - name: Teste image name
        run: echo "Nombre leido de package.json -> $name"

      - name: Build imagen Docker
        run: docker build -t $name:latest -f app/Dockerfile app/

      - name: Mostrar tamaño de la imagen
        run: |
          IMAGE_ID=$(docker images -q $name:latest)
          IMAGE_SIZE=$(docker image inspect $IMAGE_ID --format='{{.Size}}')
          echo "Tamaño aproximado: $((IMAGE_SIZE / 1000000)) MB"

#      - name: Login en ECR
#        run: |
#          aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
#
#      - name: Taggear imagen para ECR
#        run: |
#          docker tag $name:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$name:latest
#
#      - name: Push a ECR
#        run: |
#          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$name:latest
#